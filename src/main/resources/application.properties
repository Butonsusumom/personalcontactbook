
# Connect to remote mySQL DB (AWS)
#spring.datasource.url = jdbc:mysql://aayhnrojpfdtqo.c7dbecmy1uwj.us-west-2.rds.amazonaws.com:3306/phone_book?autoReconnect=true&useSSL=false&serverTimezone=UTC

# Connect to remote mySQL DB
#spring.datasource.url = jdbc:mysql://localhost:3306/phone_book?autoReconnect=true&useSSL=false&serverTimezone=UTC

# Connect to local H2 file DB

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto =create

# The SQL dialect makes Hibernate generate better SQL for the chosen database

server.contextPath=/

server.port=8082
# ������� ����� ��� ������ � ����
spring.jpa.hibernate.use-new-id-generator-mappings=true
#spring.datasource.url=jdbc:mysql://localhost:3306/phone_book?useSSL=true
#spring.datasource.username=root
#spring.datasource.password=Blumblum1@
spring.datasource.url=jdbc:postgres://iwfgcfdvndcinj:b430480f1ec9c130d5e394621b48f7cb85fee55ee119e47449536d51ebb9c2fc@ec2-54-217-204-34.eu-west-1.compute.amazonaws.com:5432/d538faprqkgkd1?sslmode=require
spring.datasource.username=iwfgcfdvndcinj
spring.datasource.password=b430480f1ec9c130d5e394621b48f7cb85fee55ee119e47449536d51ebb9c2fc
spring.mail.host = smtp.gmail.com

#sender's email & password
spring.mail.username = noreply.contactbook@gmail.com
spring.mail.password = Blumblum1@

#Below Properties are needed for maintaining the session.
#Two Step verification should not be enabled for gmail.
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false